/**!
 * Trigger Cycle v0.0.1
 * @author phucbm
 * @homepage https://github.com/phucbm/trigger-cycle
 * @license MIT 2024
 */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var i=e();for(var s in i)("object"==typeof exports?exports:t)[s]=i[s]}}(this,(()=>(()=>{"use strict";var t={d:(e,i)=>{for(var s in i)t.o(i,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:i[s]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{TriggerCycle:()=>i});class i{constructor({intervalInSeconds:t=2,triggerElements:e=[],activeClass:i="active",loop:s=!1,onActive:n=(()=>{}),onDeactive:r=(()=>{}),onPause:a=(()=>{}),onResume:h=(()=>{}),onStart:o=(()=>{}),onProgress:l=(()=>{}),visibilityElement:c=null,visibilityThreshold:d=.5,pauseOnBreakpoint:v=null}={}){this.intervalInSeconds=t,this.triggerElements=e,this.activeClass=i,this.loop=s,this.onActive=n,this.onDeactive=r,this.onPause=a,this.onResume=h,this.onStart=o,this.visibilityElement=c,this.visibilityThreshold=d,this.pauseOnBreakpoint=v,this.onProgress=l,this.currentIndex=0,this.animationFrameId=null,this.isVisible=!1,this.lastTimestamp=null,this.pausedByBreakpoint=!1,this.isPaused=!1,this.addEventListeners(),this.activate(0,"interval"),this.visibilityElement?this.setupVisibilityObserver():this.startInterval(),null!==this.pauseOnBreakpoint&&this.setupResizeListener()}createEventObject(t,e={}){return{index:t,element:this.triggerElements[t],...e}}setupVisibilityObserver(){const t={threshold:this.visibilityThreshold};this.observer=new IntersectionObserver((t=>{t.forEach((t=>{t.target===this.visibilityElement&&(this.isVisible=t.intersectionRatio>=this.visibilityThreshold,this.isVisible?this.resume("visibility"):this.pause("visibility"))}))}),t),this.observer.observe(this.visibilityElement)}setupResizeListener(){window.addEventListener("resize",this.checkBreakpoint.bind(this)),this.checkBreakpoint()}checkBreakpoint(){window.innerWidth<=this.pauseOnBreakpoint?(this.pause("breakpoint"),this.pausedByBreakpoint=!0):this.pausedByBreakpoint&&(this.resume("breakpoint"),this.pausedByBreakpoint=!1)}startInterval(){this.visibilityElement&&!this.isVisible||null!==this.pauseOnBreakpoint&&window.innerWidth<=this.pauseOnBreakpoint||(this.lastTimestamp=null,this.onStart(this.createEventObject(this.currentIndex)),this.animationFrameId=requestAnimationFrame(this.runInterval.bind(this)))}runInterval(t){this.lastTimestamp||(this.lastTimestamp=t);const e=(t-this.lastTimestamp)/1e3,i=e/this.intervalInSeconds;this.onProgress(this.createEventObject(this.currentIndex,{progress:i}));for(let t=0;t<this.currentIndex;t++)this.onProgress(this.createEventObject(t,{progress:1}));if(e>=this.intervalInSeconds){this.lastTimestamp=t;let e=this.currentIndex+1;if(e>=this.triggerElements.length){if(!this.loop)return void cancelAnimationFrame(this.animationFrameId);e=0}this.activate(e,"interval")}else this.animationFrameId=requestAnimationFrame(this.runInterval.bind(this))}activate(t,e){cancelAnimationFrame(this.animationFrameId);const i=[];for(let s=t+1;s<this.triggerElements.length;s++)this.triggerElements[s].classList.contains(this.activeClass)&&(this.triggerElements[s].classList.remove(this.activeClass),i.push(this.triggerElements[s]),this.onDeactive(this.createEventObject(s,{deactivatedElements:i,triggeredBy:e})));for(let i=0;i<=t;i++)this.triggerElements[i].classList.contains(this.activeClass)&&i!==t||(this.triggerElements[i].classList.add(this.activeClass),i===t?this.onActive(this.createEventObject(i,{triggeredBy:e})):this.onActive(this.createEventObject(i,{triggeredBy:"immediate-active"})));this.currentIndex=t,(this.loop||t<this.triggerElements.length-1)&&this.startInterval()}addEventListeners(){this.triggerElements.forEach(((t,e)=>{t.addEventListener("click",(()=>{this.activate(e,"click")}))}))}pause(t=""){this.isPaused||(cancelAnimationFrame(this.animationFrameId),this.isPaused=!0,this.onPause(this.createEventObject(this.currentIndex,{type:t})))}resume(t=""){this.isPaused&&("breakpoint"!==t&&this.pausedByBreakpoint||(this.isPaused=!1,this.startInterval(),this.onResume(this.createEventObject(this.currentIndex,{type:t}))))}}return e})()));